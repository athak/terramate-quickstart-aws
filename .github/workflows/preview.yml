---
name: Terraform Preview

on:
  pull_request:
    branches:
      - main

jobs:
  preview:
    name: Plan Terraform changes in changed Terramate stacks
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read
      pull-requests: write
      checks: read

    steps:
      ### Create Pull Request comment

      - name: Prepare pull request preview comment
        if: github.event.pull_request
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          header: preview
          message: |
            ## Preview of Terraform changes in ${{ github.event.pull_request.head.sha }}

            :warning: preview is being created... please stand by!

      ### Check out the code

      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      ### Install tooling

      - name: Install Terramate
        uses: terramate-io/terramate-action@v1

      - name: Install asdf
        uses: asdf-vm/actions/setup@v3

      - name: Install Terraform with asdf
        run: |
          asdf plugin add terraform
          asdf install terraform

      ### Linting

      - name: Check Terramate formatting
        run: terramate fmt --check

      - name: Check Terraform formatting
        run: terraform fmt -recursive -check -diff

      ### Check for changed stacks

      - name: List changed stacks
        id: list
        run: echo "changed_stacks=$(terramate -C stacks list --changed)" >> $GITHUB_OUTPUT

      ### Configure cloud credentials

      - name: Configure AWS credentials
        if: steps.list.outputs.changed_stacks
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/github
        env:
          AWS_REGION: us-east-1
          AWS_ACCOUNT_ID: ${{ vars.AWS_ACCOUNT_ID }}

      - name: Verify AWS credentials
        if: steps.list.outputs.changed_stacks
        run: aws sts get-caller-identity

      ### Run the Terraform preview via Terramate in each changed stack

      - name: Initialize Terraform in changed stacks
        if: steps.list.outputs.changed_stacks
        run: |
          terramate run \
            -C stacks \
            --parallel 1 \
            --changed \
            -- \
            terraform init -lock-timeout=5m

      - name: Validate Terraform configuration in changed stacks
        if: steps.list.outputs.changed_stacks
        run: |
          terramate run \
            -C stacks \
            --parallel 5  \
            --changed \
            -- \
            terraform validate

      - name: Plan Terraform changes in changed stacks
        if: steps.list.outputs.changed_stacks
        run: |
          terramate run \
            -C stacks \
            --parallel 5 \
            --changed \
            --cloud-sync-preview \
            --cloud-sync-terraform-plan-file=out.tfplan \
            --debug-preview-url preview_url.txt \
            --continue-on-error \
            -- \
            terraform plan -out out.tfplan -detailed-exitcode -lock=false
        env:
          GITHUB_TOKEN: ${{ github.token }}

      ### Update Pull Request comment

      - name: Generate preview details
        if: steps.list.outputs.changed_stacks
        id: comment
        run: |
          {
            echo "## Preview of Terraform changes in ${{ github.event.pull_request.head.sha }}"
            echo
            echo "[:mag: View Details on Terramate Cloud]($(cat stacks/preview_url.txt))"
            echo
            echo "### Changed Stacks"
            echo
            echo '```bash'
            echo "${{ steps.list.outputs.changed_stacks }}"
            echo '```'
            echo
            echo "#### Terraform Plan"
            echo
            echo '```terraform'
            terramate run -C stacks --changed -- terraform show -no-color out.tfplan |& dd bs=1024 count=248
            [ "${PIPESTATUS[0]}" == "141" ] && sed -i 's/#### Terraform Plan/#### :warning: Terraform Plan truncated: please check console output :warning:/' pr-comment.txt
            echo '```'
          } >> pr-comment.txt
          cat pr-comment.txt >> $GITHUB_STEP_SUMMARY

      - name: Generate preview when no stacks changed
        if: success() && !steps.list.outputs.changed_stacks
        run: |
          {
            echo "## Preview of Terraform changes in ${{ github.event.pull_request.head.sha }}"
            echo
            echo "### Changed Stacks"
            echo
            echo 'No changed stacks, no detailed preview will be generated.'
          } >> pr-comment.txt
          cat pr-comment.txt >> $GITHUB_STEP_SUMMARY

      - name: Generate preview when things failed
        if: failure()
        run: |
          {
            echo "## Preview of Terraform changes in ${{ github.event.pull_request.head.sha }}"
            echo
            echo "[:mag: View Details on Terramate Cloud]($(cat stacks/preview_url.txt))"
            echo
            echo "### Changed Stacks"
            echo
            echo '```bash'
            echo "${{ steps.list.outputs.changed_stacks }}"
            echo '```'
            echo ':boom: Generating preview failed. Please see details in Actions output.'
          } >> pr-comment.txt
          cat pr-comment.txt >> $GITHUB_STEP_SUMMARY

      - name: Publish generated preview as GitHub commnent
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          header: preview
          path: pr-comment.txt
